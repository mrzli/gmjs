import {
  createEmptyNormalizedItems,
  createNormalizedItems,
  NormalizedItems,
  removeNormalizedItem,
  updateNormalizedItem,
} from '@gmjs/react-util';
import { AppEntity2 } from '@gmjs-apps/example-shared';
import {
  ACTION_TYPE_ENTITY2_CREATE,
  ACTION_TYPE_ENTITY2_CREATE_FULFILLED,
  ACTION_TYPE_ENTITY2_CREATE_PENDING,
  ACTION_TYPE_ENTITY2_CREATE_REJECTED,
  ACTION_TYPE_ENTITY2_GET_ALL,
  ACTION_TYPE_ENTITY2_GET_ALL_FULFILLED,
  ACTION_TYPE_ENTITY2_GET_ALL_PENDING,
  ACTION_TYPE_ENTITY2_GET_ALL_REJECTED,
  ACTION_TYPE_ENTITY2_GET_BY_ID,
  ACTION_TYPE_ENTITY2_GET_BY_ID_FULFILLED,
  ACTION_TYPE_ENTITY2_GET_BY_ID_PENDING,
  ACTION_TYPE_ENTITY2_GET_BY_ID_REJECTED,
  ACTION_TYPE_ENTITY2_REMOVE,
  ACTION_TYPE_ENTITY2_REMOVE_FULFILLED,
  ACTION_TYPE_ENTITY2_REMOVE_PENDING,
  ACTION_TYPE_ENTITY2_REMOVE_REJECTED,
  ACTION_TYPE_ENTITY2_UPDATE,
  ACTION_TYPE_ENTITY2_UPDATE_FULFILLED,
  ACTION_TYPE_ENTITY2_UPDATE_PENDING,
  ACTION_TYPE_ENTITY2_UPDATE_REJECTED,
  ActionEntity2,
} from './action';

export interface Entity2State {
  readonly isLoading: boolean;
  readonly items: NormalizedItems<AppEntity2>;
}

export const ENTITY2_INITIAL_STATE: Entity2State = {
  isLoading: false,
  items: createEmptyNormalizedItems(),
};

export function entity2Reducer(
  state: Entity2State = ENTITY2_INITIAL_STATE,
  action: ActionEntity2
): Entity2State {
  switch (action.type) {
    case ACTION_TYPE_ENTITY2_GET_ALL:
      return state;
    case ACTION_TYPE_ENTITY2_GET_ALL_PENDING:
      return {
        ...state,
        isLoading: true,
      };
    case ACTION_TYPE_ENTITY2_GET_ALL_FULFILLED:
      return {
        ...state,
        isLoading: false,
        items: createNormalizedItems(action.payload),
      };
    case ACTION_TYPE_ENTITY2_GET_ALL_REJECTED:
      return {
        ...state,
        isLoading: false,
      };
    case ACTION_TYPE_ENTITY2_GET_BY_ID:
      return state;
    case ACTION_TYPE_ENTITY2_GET_BY_ID_PENDING:
      return {
        ...state,
        isLoading: true,
      };
    case ACTION_TYPE_ENTITY2_GET_BY_ID_FULFILLED:
      return {
        ...state,
        isLoading: false,
        items: updateNormalizedItem(state.items, action.payload),
      };
    case ACTION_TYPE_ENTITY2_GET_BY_ID_REJECTED:
      return {
        ...state,
        isLoading: false,
      };
    case ACTION_TYPE_ENTITY2_CREATE:
      return state;
    case ACTION_TYPE_ENTITY2_CREATE_PENDING:
      return {
        ...state,
        isLoading: true,
      };
    case ACTION_TYPE_ENTITY2_CREATE_FULFILLED:
      return {
        ...state,
        isLoading: false,
        items: updateNormalizedItem(state.items, action.payload),
      };
    case ACTION_TYPE_ENTITY2_CREATE_REJECTED:
      return {
        ...state,
        isLoading: false,
      };
    case ACTION_TYPE_ENTITY2_UPDATE:
      return state;
    case ACTION_TYPE_ENTITY2_UPDATE_PENDING:
      return {
        ...state,
        isLoading: true,
      };
    case ACTION_TYPE_ENTITY2_UPDATE_FULFILLED:
      return {
        ...state,
        isLoading: false,
        items: updateNormalizedItem(state.items, action.payload),
      };
    case ACTION_TYPE_ENTITY2_UPDATE_REJECTED:
      return {
        ...state,
        isLoading: false,
      };
    case ACTION_TYPE_ENTITY2_REMOVE:
      return state;
    case ACTION_TYPE_ENTITY2_REMOVE_PENDING:
      return {
        ...state,
        isLoading: true,
      };
    case ACTION_TYPE_ENTITY2_REMOVE_FULFILLED:
      return {
        ...state,
        isLoading: false,
        items: removeNormalizedItem(state.items, action.payload),
      };
    case ACTION_TYPE_ENTITY2_REMOVE_REJECTED:
      return {
        ...state,
        isLoading: false,
      };
  }
}
