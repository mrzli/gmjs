import { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';
import type { Except } from 'type-fest';
import { AppAnotherEntity } from '@gmjs-apps/example-shared';
import { AnotherEntityService } from './another-entity.service';

@Controller({ path: 'another-entity' })
export class AnotherEntityController {
  public constructor(
    private readonly anotherEntityService: AnotherEntityService
  ) {}

  @Get('/find-all')
  public async getAll(): Promise<readonly AppAnotherEntity[]> {
    return this.anotherEntityService.getAll();
  }

  @Get('/find/:id')
  public async getById(@Param('id') id: string): Promise<AppAnotherEntity> {
    return this.anotherEntityService.getById(id);
  }

  @Post('/create')
  public async create(
    @Body() anotherEntity: Except<AppAnotherEntity, 'id'>
  ): Promise<AppAnotherEntity> {
    return this.anotherEntityService.create(anotherEntity);
  }

  @Post('/update/:id')
  public async update(
    @Param('id') id: string,
    @Body() anotherEntity: Partial<Except<AppAnotherEntity, 'id'>>
  ): Promise<AppAnotherEntity> {
    return this.anotherEntityService.update(id, anotherEntity);
  }

  @Delete('/remove/:id')
  public async remove(@Param('id') id: string): Promise<void> {
    await this.anotherEntityService.remove(id);
  }
}
