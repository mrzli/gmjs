import { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';
import type { Except } from 'type-fest';
import { AppEntity } from '@gmjs-apps/example-shared';
import { EntityService } from './entity.service';

@Controller({ path: 'entity' })
export class EntityController {
  public constructor(private readonly entityService: EntityService) {}

  @Get('/find-all')
  public async getAll(): Promise<readonly AppEntity[]> {
    return this.entityService.getAll();
  }

  @Get('/find/:id')
  public async getById(@Param('id') id: string): Promise<AppEntity> {
    return this.entityService.getById(id);
  }

  @Post('/create')
  public async create(
    @Body() entity: Except<AppEntity, 'id'>
  ): Promise<AppEntity> {
    return this.entityService.create(entity);
  }

  @Post('/update/:id')
  public async update(
    @Param('id') id: string,
    @Body() entity: Partial<Except<AppEntity, 'id'>>
  ): Promise<AppEntity> {
    return this.entityService.update(id, entity);
  }

  @Delete('/remove/:id')
  public async remove(@Param('id') id: string): Promise<void> {
    await this.entityService.remove(id);
  }
}
