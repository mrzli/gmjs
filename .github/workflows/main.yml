name: Main

on: []
#  push:
#  workflow_dispatch:

jobs:
  install-deps:
    runs-on: ubuntu-latest
    env:
      FORCE_CACHE_RESET: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Read Node Version From .nvmrc
        id: node-version
        run: echo ::set-output name=node-version::$(cat .nvmrc)
      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Setup Node
        uses: actions/setup-node@v2
        if: steps.cache.outputs.cache-hit != 'true' || env.FORCE_CACHE_RESET == 'true'
        with:
          node-version: ${{ steps.node-version.outputs.node-version }}
      - name: Npm Install
        if: steps.cache.outputs.cache-hit != 'true' || env.FORCE_CACHE_RESET == 'true'
        run: npm ci
  test-project:
    runs-on: ubuntu-latest
    needs: install-deps
    strategy:
      matrix:
        target: [ 'test', 'lint', 'build' ]
        jobIndex: [ 1 ] # [ 1, 2, 3, 4 ]
    env:
      JOB_COUNT: 1 # 4
      # I need more than last commit to execute 'nx affected' inside (only last commit would be fetched if 'fetch-depth' was omitted)
      FETCH_DEPTH: 500 # this should work if feature branch has less than 500 commits, set to 0 to fetch entire history
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}
      - name: Cache Node Modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Cache Nx
        uses: actions/cache@v2
        with:
          path: node_modules/.cache/nx
          key: cache-nx-${{ hashFiles('package-lock.json') }}-${{ matrix.target }}-${{ matrix.jobIndex }}-${{ github.sha }}
          restore-keys: |
            cache-nx-${{ hashFiles('package-lock.json') }}-${{ matrix.target }}-${{ matrix.jobIndex }}-
            cache-nx-${{ hashFiles('package-lock.json') }}-
      - name: Fetch 'master' For 'Affected' Comparison (If Not Already On 'master')
        if: ${{ github.ref != 'refs/heads/master' }}
        run: git fetch --no-tags --prune --depth=${{ env.FETCH_DEPTH }} origin master
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: mrzli-gh-actions/calculate-nx-affected-head-base@v0.0.2
        id: set-SHAs
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          main-branch-name: master
          version-bump-commit-message-summary-matcher: '^chore\(release\): '
      - name: Execute Task - ${{ matrix.target }}
        run: node ./tools/scripts/run-many.js ${{ matrix.target }} ${{ matrix.jobIndex }} ${{ env.JOB_COUNT }} ${{ steps.set-SHAs.outputs.base }} ${{ steps.set-SHAs.outputs.head }}
  publish:
    runs-on: ubuntu-latest
    needs: test-project
    if: ${{ github.ref == 'refs/heads/master' }} # run only for master
    env:
      FETCH_DEPTH: 500
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}
      - name: Cache Node Modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Config git for Semver
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - name: Fetch Tags for Semver
        run: git fetch origin 'refs/tags/*:refs/tags/*'
      - name: Semver
        # skipProjectChangelog must not be true for some reason, otherwise version is not incremented??
        run: npx nx run workspace:version --baseBranch=master --versionTagPrefix=v --skipRootChangelog=false --skipProjectChangelog=false --push=true --dry-run=false
      - name: Build All
        run: npx nx run-many --all --target=build
      - name: Publish All
        run: npx nx run-many --all --target=publish

